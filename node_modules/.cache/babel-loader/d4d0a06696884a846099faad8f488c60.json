{"ast":null,"code":"// X - O - ''\n\nexport class TicTacToe {\n  constructor() {\n    this.board = void 0;\n    this.currentPlayer = void 0;\n    this.board = [[\"\", \"X\", \"X\", \"X\"], [\"X\", \"\", \"X\", \"\"], [\"X\", \"X\", \"\", \"\"], [\"X\", \"\", \"\", \"\"]];\n    this.currentPlayer = \"X\";\n    const isWinner = this.checkWinner(\"X\");\n    console.log(\"X is the winner\", isWinner);\n  }\n  checkWinner(player) {\n    if (this.check4Corner(player) || this.checkVertical(player) || this.checkHorizontal(player) || this.checkDiagonal(player) || this.checkBoxes(player)) return true;\n    return false;\n  }\n  check4Corner(player) {\n    if (this.board[0][0] === player && this.board[0][3] === player && this.board[3][0] === player && this.board[3][3] === player) {\n      console.log(\"matched by 4 corners\");\n      return true;\n    }\n    return false;\n  }\n  checkVertical(player) {\n    // if first row all columns is same player he is the winner\n    for (let col = 0; col < 4; col++) {\n      if (this.board[0][col] === player && this.board[1][col] === player && this.board[2][col] === player && this.board[3][col] === player) {\n        console.log(\"matched by vertical\");\n        return true;\n      }\n    }\n    return false;\n  }\n  checkHorizontal(player) {\n    // if first column all rows is same player he is the winner\n    for (let row = 0; row < 4; row++) {\n      if (this.board[row][0] === player && this.board[row][1] === player && this.board[row][2] === player && this.board[row][3] === player) {\n        console.log(\"matched by horizontal\");\n        return true;\n      }\n    }\n    return false;\n  }\n  checkDiagonal(player) {\n    const firstLine = this.board[0][0] === player && this.board[1][1] === player && this.board[2][2] === player && this.board[3][3] === player; // line: \\\n\n    const secondLine = this.board[3][0] === player && this.board[2][1] === player && this.board[1][2] === player && this.board[0][3] === player; // line: /\n    if (firstLine || secondLine) {\n      console.log(\"matched by diagonal\");\n      return true;\n    }\n    return false;\n  }\n  checkBoxes(player) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === player && this.board[row][col + 1] === player && this.board[row + 1][col] === player && this.board[row + 1][col + 1] === player) {\n          console.log(\"matched by 2x2 boxes\");\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["TicTacToe","constructor","board","currentPlayer","isWinner","checkWinner","console","log","player","check4Corner","checkVertical","checkHorizontal","checkDiagonal","checkBoxes","col","row","firstLine","secondLine"],"sources":["/Users/thomaskonan/Desktop/Actualize/tic_tac_toe_4x4/src/tic-tac-toe.ts"],"sourcesContent":["// X - O - ''\n\ntype Player = \"X\" | \"O\";\ntype Cell = Player | \"\";\n\nexport class TicTacToe {\n  board: Cell[][];\n  currentPlayer: Player;\n\n  constructor() {\n    this.board = [\n      [\"\", \"X\", \"X\", \"X\"],\n      [\"X\", \"\", \"X\", \"\"],\n      [\"X\", \"X\", \"\", \"\"],\n      [\"X\", \"\", \"\", \"\"],\n    ];\n\n    this.currentPlayer = \"X\";\n\n    const isWinner = this.checkWinner(\"X\");\n    console.log(\"X is the winner\", isWinner);\n  }\n\n  checkWinner(player: Player) {\n    if (\n      this.check4Corner(player) ||\n      this.checkVertical(player) ||\n      this.checkHorizontal(player) ||\n      this.checkDiagonal(player) ||\n      this.checkBoxes(player)\n    )\n      return true;\n\n    return false;\n  }\n\n  check4Corner(player: Player) {\n    if (\n      this.board[0][0] === player &&\n      this.board[0][3] === player &&\n      this.board[3][0] === player &&\n      this.board[3][3] === player\n    ) {\n      console.log(\"matched by 4 corners\");\n      return true;\n    }\n\n    return false;\n  }\n\n  checkVertical(player: Player) {\n    // if first row all columns is same player he is the winner\n    for (let col = 0; col < 4; col++) {\n      if (\n        this.board[0][col] === player &&\n        this.board[1][col] === player &&\n        this.board[2][col] === player &&\n        this.board[3][col] === player\n      ) {\n        console.log(\"matched by vertical\");\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  checkHorizontal(player: Player) {\n    // if first column all rows is same player he is the winner\n    for (let row = 0; row < 4; row++) {\n      if (\n        this.board[row][0] === player &&\n        this.board[row][1] === player &&\n        this.board[row][2] === player &&\n        this.board[row][3] === player\n      ) {\n        console.log(\"matched by horizontal\");\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  checkDiagonal(player: Player) {\n    const firstLine =\n      this.board[0][0] === player &&\n      this.board[1][1] === player &&\n      this.board[2][2] === player &&\n      this.board[3][3] === player; // line: \\\n\n    const secondLine =\n      this.board[3][0] === player &&\n      this.board[2][1] === player &&\n      this.board[1][2] === player &&\n      this.board[0][3] === player; // line: /\n    if (firstLine || secondLine) {\n      console.log(\"matched by diagonal\");\n      return true;\n    }\n    return false;\n  }\n\n  checkBoxes(player: Player) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (\n          this.board[row][col] === player &&\n          this.board[row][col + 1] === player &&\n          this.board[row + 1][col] === player &&\n          this.board[row + 1][col + 1] === player\n        ) {\n          console.log(\"matched by 2x2 boxes\");\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":"AAAA;;AAKA,OAAO,MAAMA,SAAS,CAAC;EAIrBC,WAAWA,CAAA,EAAG;IAAA,KAHdC,KAAK;IAAA,KACLC,aAAa;IAGX,IAAI,CAACD,KAAK,GAAG,CACX,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACnB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAClB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAClB;IAED,IAAI,CAACC,aAAa,GAAG,GAAG;IAExB,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,GAAG,CAAC;IACtCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC;EAC1C;EAEAC,WAAWA,CAACG,MAAc,EAAE;IAC1B,IACE,IAAI,CAACC,YAAY,CAACD,MAAM,CAAC,IACzB,IAAI,CAACE,aAAa,CAACF,MAAM,CAAC,IAC1B,IAAI,CAACG,eAAe,CAACH,MAAM,CAAC,IAC5B,IAAI,CAACI,aAAa,CAACJ,MAAM,CAAC,IAC1B,IAAI,CAACK,UAAU,CAACL,MAAM,CAAC,EAEvB,OAAO,IAAI;IAEb,OAAO,KAAK;EACd;EAEAC,YAAYA,CAACD,MAAc,EAAE;IAC3B,IACE,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,EAC3B;MACAF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd;EAEAG,aAAaA,CAACF,MAAc,EAAE;IAC5B;IACA,KAAK,IAAIM,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAChC,IACE,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,KAAKN,MAAM,IAC7B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,KAAKN,MAAM,IAC7B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,KAAKN,MAAM,IAC7B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,KAAKN,MAAM,EAC7B;QACAF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,OAAO,IAAI;MACb;IACF;IAEA,OAAO,KAAK;EACd;EAEAI,eAAeA,CAACH,MAAc,EAAE;IAC9B;IACA,KAAK,IAAIO,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAChC,IACE,IAAI,CAACb,KAAK,CAACa,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKP,MAAM,IAC7B,IAAI,CAACN,KAAK,CAACa,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKP,MAAM,IAC7B,IAAI,CAACN,KAAK,CAACa,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKP,MAAM,IAC7B,IAAI,CAACN,KAAK,CAACa,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKP,MAAM,EAC7B;QACAF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpC,OAAO,IAAI;MACb;IACF;IAEA,OAAO,KAAK;EACd;EAEAK,aAAaA,CAACJ,MAAc,EAAE;IAC5B,MAAMQ,SAAS,GACb,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,CAAC,CAAC;;IAE/B,MAAMS,UAAU,GACd,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,IAC3B,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKM,MAAM,CAAC,CAAC;IAC/B,IAAIQ,SAAS,IAAIC,UAAU,EAAE;MAC3BX,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAM,UAAUA,CAACL,MAAc,EAAE;IACzB,KAAK,IAAIO,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAChC,KAAK,IAAID,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;QAChC,IACE,IAAI,CAACZ,KAAK,CAACa,GAAG,CAAC,CAACD,GAAG,CAAC,KAAKN,MAAM,IAC/B,IAAI,CAACN,KAAK,CAACa,GAAG,CAAC,CAACD,GAAG,GAAG,CAAC,CAAC,KAAKN,MAAM,IACnC,IAAI,CAACN,KAAK,CAACa,GAAG,GAAG,CAAC,CAAC,CAACD,GAAG,CAAC,KAAKN,MAAM,IACnC,IAAI,CAACN,KAAK,CAACa,GAAG,GAAG,CAAC,CAAC,CAACD,GAAG,GAAG,CAAC,CAAC,KAAKN,MAAM,EACvC;UACAF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnC,OAAO,IAAI;QACb;MACF;IACF;IAEA,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}